import{c as e}from"../shared/create-shadow.min.mjs";import{e as t}from"../shared/effect-init.min.mjs";import{e as s}from"../shared/effect-target.min.mjs";import{e as r}from"../shared/effect-virtual-transition-end.min.mjs";import{g as a,o as i}from"../shared/utils.min.mjs";function o(o){let{swiper:l,extendParams:n,on:p}=o;n({flipEffect:{slideShadows:!0,limitRotation:!0}});const f=(t,s)=>{let r=l.isHorizontal()?t.querySelector(".swiper-slide-shadow-left"):t.querySelector(".swiper-slide-shadow-top"),a=l.isHorizontal()?t.querySelector(".swiper-slide-shadow-right"):t.querySelector(".swiper-slide-shadow-bottom");r||(r=e("flip",t,l.isHorizontal()?"left":"top")),a||(a=e("flip",t,l.isHorizontal()?"right":"bottom")),r&&(r.style.opacity=Math.max(-s,0)),a&&(a.style.opacity=Math.max(s,0))};t({effect:"flip",swiper:l,on:p,setTranslate:()=>{const{slides:e,rtlTranslate:t}=l,r=l.params.flipEffect,a=i(l);for(let i=0;i<e.length;i+=1){const o=e[i];let n=o.progress;l.params.flipEffect.limitRotation&&(n=Math.max(Math.min(o.progress,1),-1));const p=o.swiperSlideOffset;let m=-180*n,d=0,c=l.params.cssMode?-p-l.translate:-p,h=0;l.isHorizontal()?t&&(m=-m):(h=c,c=0,d=-m,m=0),o.style.zIndex=-Math.abs(Math.round(n))+e.length,r.slideShadows&&f(o,n);const w=`translate3d(${c}px, ${h}px, 0px) rotateX(${a(d)}deg) rotateY(${a(m)}deg)`;s(r,o).style.transform=w}},setTransition:e=>{const t=l.slides.map((e=>a(e)));t.forEach((t=>{t.style.transitionDuration=`${e}ms`,t.querySelectorAll(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").forEach((t=>{t.style.transitionDuration=`${e}ms`}))})),r({swiper:l,duration:e,transformElements:t})},recreateShadows:()=>{l.params.flipEffect,l.slides.forEach((e=>{let t=e.progress;l.params.flipEffect.limitRotation&&(t=Math.max(Math.min(e.progress,1),-1)),f(e,t)}))},getEffectParams:()=>l.params.flipEffect,perspective:()=>!0,overwriteParams:()=>({slidesPerView:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!l.params.cssMode})})}export{o as default};