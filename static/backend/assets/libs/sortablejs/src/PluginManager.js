let plugins=[];const defaults={initializeByDefault:!0};export default{mount(n){for(let e in defaults)defaults.hasOwnProperty(e)&&!(e in n)&&(n[e]=defaults[e]);plugins.forEach((e=>{if(e.pluginName===n.pluginName)throw`Sortable: Cannot mount plugin ${n.pluginName} more than once`})),plugins.push(n)},pluginEvent(n,e,t){this.eventCanceled=!1,t.cancel=()=>{this.eventCanceled=!0};const i=n+"Global";plugins.forEach((o=>{e[o.pluginName]&&(e[o.pluginName][i]&&e[o.pluginName][i]({sortable:e,...t}),e.options[o.pluginName]&&e[o.pluginName][n]&&e[o.pluginName][n]({sortable:e,...t}))}))},initializePlugins(n,e,t,i){plugins.forEach((i=>{const o=i.pluginName;if(!n.options[o]&&!i.initializeByDefault)return;let l=new i(n,e,n.options);l.sortable=n,l.options=n.options,n[o]=l,Object.assign(t,l.defaults)}));for(let e in n.options){if(!n.options.hasOwnProperty(e))continue;let t=this.modifyOption(n,e,n.options[e]);void 0!==t&&(n.options[e]=t)}},getEventProperties(n,e){let t={};return plugins.forEach((i=>{"function"==typeof i.eventProperties&&Object.assign(t,i.eventProperties.call(e[i.pluginName],n))})),t},modifyOption(n,e,t){let i;return plugins.forEach((o=>{n[o.pluginName]&&o.optionListeners&&"function"==typeof o.optionListeners[e]&&(i=o.optionListeners[e].call(n[o.pluginName],t))})),i}};